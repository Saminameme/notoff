@tailwind base;
@tailwind components;
@tailwind utilities;

 /* 全局CSS */
@import "~@blueprintjs/core/lib/css/blueprint.css";
@import "~@blueprintjs/core/lib/scss/variables"; // Blueprint variables
@import "~@blueprintjs/icons/lib/css/blueprint-icons.css";

// Define light mode default colors as CSS variables
:root {
  --app-bg-color: #e6ecf0;
  --app-text-color: #{$pt-text-color}; // Use Blueprint's text color
  --app-card-bg-color: white;
  --app-link-color: #{$blue3};
  --app-link-hover-color: #{$blue5};
  --app-border-color: #{$light-gray3};
  --app-secondary-text-color: #{$gray3};
  --app-header-bg-color: rgba(255, 255, 255, 0.99);
  --app-feed-item-hover-bg: rgba(255, 255, 255, 0.92);
  --app-button-primary-bg: #{$blue5}; // $pt-intent-primary
}

// Define dark mode colors using CSS variables
.app-dark-mode {
  --app-bg-color: #{$dark-gray2}; // Or another dark color like #22272B (dark-gray1) or #10161A
  --app-text-color: #{$light-gray5}; // Blueprint's light text color for dark themes
  --app-card-bg-color: #{$dark-gray4}; // A dark card background
  --app-link-color: #{$blue2}; // Lighter blue for dark mode
  --app-link-hover-color: #{$blue1};
  --app-border-color: #{$gray2}; // Darker border
  --app-secondary-text-color: #{$light-gray1};
  --app-header-bg-color: rgba(40, 48, 54, 0.95); // Darker header, e.g., dark-gray3 with opacity
  --app-feed-item-hover-bg: #{$dark-gray5}; // Slightly lighter than card bg for hover
  --app-button-primary-bg: #{$blue3}; // Keep primary buttons noticeable
}

$pt-intent-primary: var(--app-button-primary-bg); // Use CSS var for Blueprint primary intent

$pt-font-family:-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,"Helvetica Neue", Helvetica, "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei",SimSun, sans-serif;

$lm-font1:12px;
$lm-font1-5:14px;
$lm-font2:16px;
$lm-font3:18px;
$lm-font4:20px;
$lm-font5:24px;


.top5
{
  margin-top:5px;
}

.left5
{
  margin-left:5px;
}

.right5
{
  margin-right:5px;
}

.top10
{
  margin-top:10px;
}

.top50
{
  margin-top:50px;
}

.hasnewfeed // Example of a component needing color update
{
  display: flex;
  justify-content: center;
  border:1px solid var(--app-border-color);
  padding:10px;
  cursor: pointer;
  background-color: var(--app-card-bg-color);
  color: var(--app-link-color);
  // Consider opacity for background if it was semi-transparent before:
  // background-color: rgba(var(--app-card-bg-color-rgb, 255, 255, 255), .6); // Need RGB vars for this
}

.ttop
{
  z-index:99999;
  position:fixed;
  top:200px;
}

.bottom2
{
  margin-bottom: 20px;
}

.overlay
{
  z-index:$pt-z-index-overlay;
}

.topbar
{
  background-color: rgba( 255, 255, 255, .8 );
}

.in-line > *
{
  display: inline;
}

body
{
  margin:0px;
}

/* global */
.header
{
  background-color:rgba( 255,255,255,.99 );
  height:45px;
  position:fixed;
  top:0px;
  left:0px;
  right:0px;
  background-color: var(--app-header-bg-color);
  box-shadow:0 1px 2px rgba(0,0,0,.1); // Shadow might need adjustment for dark mode
  z-index:9;
}

.bp3-dark .header { // Specific overrides for blueprint dark mode if needed for shadow
  box-shadow:0 1px 2px rgba(0,0,0,.3);
}


.header > .middle
{
  height:100%;
  display: flex;
  flex-direction:row;
  align-self:auto;
  padding-left:10px;
  padding-right:10px;
  /* background-color:blue; */
  justify-content: space-between;
  .left
  {
    flex:1;
    display: flex;
    flex-direction: row;
  }
}

.logo
{
  font-size:$lm-font5;
  color: var(--app-link-color);
}

.header .logo
{
  align-items:center;
  display:flex;
  width:fit-content;
  margin-right: 10px ;
}

.header .links
{
  // flex:6;
  /* background-color:orange; */
  display: flex;
  align-items:center;


  .link-icon
  {
    display: none; 
  }
}

.header .links ul
{
  margin:0px;
  padding:0px;
  display: flex;
  /* background-color: brown; */
}

.header .links ul > li
{
  /* background-color: aquamarine; */
  align-items:center;
}

.header .links ul > li a
{
  color: var(--app-secondary-text-color);
  font-size: $lm-font3;
  margin-right: 20px;
}

.header .links ul > li a:hover
{
  text-decoration: none; 
  border-bottom: 3px solid var(--app-secondary-text-color);
  padding-bottom:10px;
}

.header .links ul > li > .active a
{
  border-bottom: 3px solid var(--app-link-color);
  padding-bottom:10px;
  color: var(--app-link-color);
}

.header .links ul > li > .active a:hover
{
  color: var(--app-link-hover-color);
}

.header  .userbox
{
  display: flex;
  justify-content:flex-end;
  align-items:center;
}

.header .userbox .avatar img
{
  max-width:32px;
  max-height:32px;
  border-radius: 50%;
}

.header .userbox .text
{
  font-size: $lm-font3;
  color: var(--app-secondary-text-color);
  margin-left:10px;
  display: flex;
  justify-content:flex-end;
  align-items:center;
  cursor:pointer;
}

.header .userbox .text .pt-icon
{
  color: var(--app-secondary-text-color);
  margin-left:3px;
}

.header .userbox .text:hover .pt-icon
{
  color: var(--app-link-hover-color);
}

.header .userbox .lang // Assuming this is a language switcher button
{
  font-size: $lm-font1;
  background-color: var(--app-secondary-text-color); // Or a button-like color
  color: var(--app-bg-color); // Text color that contrasts with its background
  margin-left:10px;
  padding:3px;
  border-radius: 3px;
}

.app-dark-mode .header .userbox .lang {
  background-color: var(--app-secondary-text-color);
  color: var(--app-text-color); // Ensure contrast
}


.header .userbox .lang:hover
{
  background-color: var(--app-link-hover-color);
}

.header .userbox .text:hover
{
  color: var(--app-link-hover-color);
}

.header > *
{
  display: flex;
  align-items:center;
}

.header  a,.contentbox  a
{
  text-decoration: none;
}

.contentbox
{
  // height:2000px;
  padding-top:45px;
  display: flex;
  flex-direction: row;
  // background-color: var(--app-bg-color); // Body background will handle this
}

.contentbox > *
{
  padding:10px;
  padding-top:20px;
}

.contentbox > .leftside
{
  flex:3;
}

.leftside > div
{
  margin-bottom:10px;
}

.usercard // Example: Card-like component
{
  background-color: var(--app-card-bg-color);
  color: var(--app-text-color);
  display: flex;
  flex-direction: column;
  min-height: 200px;
}

.usercard > .cover
{
  flex:1;
  background-position: center left;
  background-size: 100%;
  background-size: cover;
  min-height:120px;
}

.usercard > .info // Info section within the card
{
  background-color: var(--app-card-bg-color); // Ensure consistency if it's a separate element
  flex:1;
}

.usercard .cardavatar
{
  > img
  {
    max-width:98px;
    max-height:98px;
    border-radius: 100%;
    border:5px solid rgba( 255, 255, 255, .8 );
  }    
}

.usercard div.avatar
{
  display: flex;
  align-items: flex-end;
  padding-left:10px;
  position: relative;
  top:-20px;
  
  .username
  {
    padding-top:30px;
    padding-left:5px;

    > .title
    {
      font-size: 20px;
      color: var(--app-link-color);
    }

    > .desp
    {
      color: var(--app-secondary-text-color);
      margin-top:3px;
      margin-bottom: 20px;
    }
  }
}

.usercard  .count
{
  display: flex;
  flex-direction: row;
  position: relative;
  top:-10px;
  border-top:1px dotted var(--app-border-color);
}

.usercard  .count > *  h1
{
  font-size: $lm-font5;
  color: var(--app-secondary-text-color);
}

.usercard  .count > * span
{
  color: var(--app-text-color); // Was $gray3, make it a bit lighter
  font-size: $lm-font2;
}

.usercard  .count > *
{
  flex:1;
  display: flex;
  flex-direction: column;
  align-items: center;
}




.contentbox > .main
{
  flex:6;
}

.contentbox > .rightside
{
  flex:3;
}

.publishbox // Example: Card-like component
{
  background-color: var(--app-card-bg-color);
  color: var(--app-text-color);
  padding:20px;
  min-height:100px;
  border-radius: 5px;

  .groupselect__control:hover
  {
    border-color: var(--app-link-color);
  }
  .groupselect__control--is-focused // Note: Blueprint might use different class for dark theme focus
  {
    border-color: var(--app-link-color);
    box-shadow: 0 0 0 1px var(--app-link-color);
  }
  .app-dark-mode .groupselect__control--is-focused { // Ensure focus rings are visible in dark mode
      box-shadow: 0 0 0 1px var(--app-link-color), 0 0 0 3px rgba(var(--app-link-color-rgb, 72, 162, 247), 0.3); // Assuming blue3 for link
  }
  .app-dark-mode .groupselect__input, .app-dark-mode .groupselect__single-value, .app-dark-mode .groupselect__placeholder {
    color: var(--app-text-color) !important; // Important needed if Blueprint styles are too specific
  }
  .app-dark-mode .groupselect__menu {
    background-color: var(--app-card-bg-color); // Or a slightly different dark bg for dropdowns
    // border: 1px solid var(--app-border-color); // if needed
  }
  .app-dark-mode .groupselect__option {
    background-color: var(--app-card-bg-color);
    color: var(--app-text-color);
  }
  .app-dark-mode .groupselect__option--is-focused {
    background-color: var(--app-link-hover-color); // Or a dark hover color
    color: white; // Text color for focused option
  }
   .app-dark-mode .groupselect__option--is-selected {
    background-color: var(--app-link-color);
    color: white;
  }


  .groupselect__menu
  {
    z-index: 999;
  }

  .uploadedimages
  {
    .upimagebox
    {
      display: inline-block;
      position: relative;

      .imagecross
      {
        position: absolute;
        top:5px;
        right:5px;
      }

      img
      {
        max-width:80px;
        max-height:80px;
        border:1px solid var(--app-border-color);
        margin:3px;
        border-radius: 5px;
      }
    }
  }

}

.publishbox textarea // Assuming this is a Blueprint TextArea or needs custom styling
{
  width:100%;
  height:100px;
  border: 1px solid var(--app-link-color); // Use link color for active border
  background-color: var(--app-card-bg-color); // Match card background
  color: var(--app-text-color);
  outline-width: 0px!important;
}
.app-dark-mode .publishbox textarea::placeholder {
  color: var(--app-secondary-text-color);
}


.publishbox .action
{
  display: flex;
  flex-direction: row;
  margin-top: 10px;
}

.publishbox .action > .icons
{
  display: flex;
  align-items: center;
  .pt-icon { // Ensure icons in this bar use text color
    color: var(--app-text-color);
  }
}

.publishbox .action > .icons
{
  .dropimage
  {
    margin-right:10px;
  }
  .rowicon
  {
    display: flex;
    flex-direction: row;
    justify-items: center;
    align-items: center;
  }

  .react-file-reader
  {
    margin-right: 10px;
  }
}

.publishbox .action > .type
{
  padding-top:10px;
  .bp3-control label { // Ensure switch label text color
    color: var(--app-text-color);
  }
}

.publishbox .action > .button
{
  flex:2;
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.publishbox .action .togroup
{
  color: var(--app-secondary-text-color);
  font-size: $lm-font2;
  margin-right:10px;
}

.publishbox .action .togroup a
{
  color: var(--app-secondary-text-color);
  display: flex;
  align-items: center;
}

.copyright // Example: Card-like component
{
  background-color: var(--app-card-bg-color);
  min-width: 40px;
  padding:10px;
  color: var(--app-secondary-text-color);
  border-top: 1px solid var(--app-border-color);
}

.promogroup // Example: Card-like component
{
  background-color: var(--app-card-bg-color);
  min-width: 40px;
  color: var(--app-text-color);
  padding:10px;
}

.promogroup h1
{
  font-size: $lm-font4;
  color: var(--app-text-color); // Was $gray5
  font-weight: 300;
  line-height: 30px;
  display: flex;
  align-items: center;
}

.promogroup h1 .pt-icon
{
  margin-right: 5px;
  color: var(--app-text-color); // Ensure icon matches text
}

.promogroup ul
{
  margin:0px;
  padding:0px;
}

.promogroup ul > li
{
  display: flex;
  flex-direction: row;
  align-items: center;
  margin-bottom: 10px;
}

.promogroup ul > li > img
{
  width:48px;
  margin-right:10px;
  border-radius: 3px;
}

.promogroup ul > li > img + * a:not(:hover)
{
  color: var(--app-secondary-text-color);
}

.promogroup ul > li > img + * a:hover
{
  color: var(--app-link-color);
}

.newfeed // This was already updated above, check for consistency
{
  margin-top: 10px;
  border:1px solid var(--app-border-color);
  padding:10px;
  border-radius: 5px;
  color: var(--app-link-color); // Was $gray1 -> link color
  background-color: var(--app-card-bg-color);
  text-align: center;
}

.feedlist
{
  border-radius: 5px;
  padding:0px;
  // background-color: var(--app-card-bg-color); // Let li handle its own background
}

.feedlist > li // Feed item itself
{
  display: flex;
  flex-direction: row;
  background-color: var(--app-card-bg-color);
  color: var(--app-text-color);
  padding:20px;
  border-bottom:1px solid var(--app-border-color);
}

.feedlist.top > li // Top feed item style
{
  border-left:3px solid var(--app-link-color); // Was $blue2
}


.feedlist > li:last-child
{
  border-bottom-width:0px;
}

.feedlist > li:hover
{
  background-color: var(--app-feed-item-hover-bg); // Use variable
}

.feedlist > li .avatarbox
{
  max-width:70px;
}

.feedlist > li .avatarbox img
{
  width:64px;
  border-radius: 100%;
}

.feedlist > li .feedbox
{
  margin-left:10px;
  width:100%;
}

.feedlist > li .feedbox .userbox .name
{
  font-size:$lm-font3;
  color: var(--app-text-color); // Was $gray3
}

.feedlist > li .feedbox .userbox .name > span
{
  font-size:$lm-font2;
  color: var(--app-secondary-text-color); // Was $gray5
  margin-left:5px;
}

.feedlist > li .feedbox .time
{
  color: var(--app-secondary-text-color); // Was $gray5
  margin-top:3px;
  margin-bottom:5px;
}

.feedlist > li .feedbox .time a
{
  color: var(--app-link-color); // Was $blue3
}

.feedlist > li .feedbox .time a:hover
{
  color: var(--app-link-hover-color); // Was $blue5
}

.feedbox .feedcontent // Text within feed
{
  font-size: $lm-font2;
  line-height: 1.5;
  overflow-wrap: break-word;
  word-break: break-word;
  color: var(--app-text-color);
}

.feedbox .feedcontent .photos
{
  padding:0px;
  align-content: center;
  display: flex;
  flex-wrap: wrap;
}

.feedbox .feedcontent .photos > li
{
  display: flex;
}

.feedbox .feedcontent .photos > li img.thumb
{
  width:100px;
  height:100px;
  border:1px solid var(--app-border-color); // Was $light-gray3
  margin:3px;
  border-radius: 5px;
}

.feedbox .feedcontent .files
{
  padding:0px;
  align-content: center;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  font-size:$lm-font2;
}

.feedbox .feedcontent .files > li // File attachment item
{
  display: flex;
  align-content: center;
  background-color: var(--app-bg-color); // Was $light-gray5, use app bg or slightly different dark shade
  border-radius: 5px;
  padding:2px;
  margin-right:5px;
  margin-bottom:5px;
}
.app-dark-mode .feedbox .feedcontent .files > li {
  background-color: #{$dark-gray3}; // Darker shade for file items in dark mode
}


.feedbox .feedcontent .files > li:hover
{
  background-color: var(--app-border-color); // Was $light-gray3
}

.feedbox .feedcontent .files > li a
{
  color: var(--app-text-color); // Was $gray3
  display: flex;
  align-content: center;
}

.feedbox .feedcontent .files > li a .pt-icon
{
  margin-right:3px;
  margin-top:4px;
  color: var(--app-text-color); // Ensure icon color
}

.feedbox .actionbar
{
  display: flex;
  flex-direction: row;
  margin-top: 10px;
}

.feedbox .actionbar > * // Action items like comment, upvote
{
  flex:1;
  display: flex;
  align-items:center;
  cursor: pointer;
  .lm-icon { // Custom icons
    color: var(--app-secondary-text-color) !important; // Target LMIcon color
  }
  .pt-icon { // Blueprint icons
     color: var(--app-secondary-text-color) !important;
  }
}


.feedbox .actionbar > * > span // Count text next to action icons
{
  margin-left:5px;
  color: var(--app-secondary-text-color); // Was $gray5
}

.feedbox 
{
  position: relative;
}

.feedbox .commentbox // Container for comments section
{
  margin-top:20px;
  > *:not(:first-child)
  {
    margin-top:10px;
  }

  .morelink // "Load more" link for comments
  {
    cursor: pointer;
    color: var(--app-secondary-text-color); // Was $gray5

    &:hover
    {
      color: var(--app-text-color); // Was $gray3
    }
  }
}

.feedbox .commentlist // List of comments
{
  padding:0px;
  >li
  {
    display: flex;
    padding-top:10px;
    padding-bottom:10px;
  }
  > li:not(:last-child)
  {
    border-bottom: 1px solid var(--app-border-color); // Was $light-gray5
  }

  .commentitem // Individual comment item
  {
    display: flex;
    align-items: baseline;
    color: var(--app-text-color); // Was $gray3
    flex-direction: column;
    line-height: 1.8;
    padding-right:5px;

    &:hover
    {
      color: var(--app-link-hover-color); // Was $gray1
      .delete
      {
        display: block;
      }
    }
    .timeline // Timestamp of comment
    {
      font-size: $lm-font1;
      color: var(--app-secondary-text-color); // Was $light-gray1
    }

    .content
    {
      width: 100%;
      position: relative;
      .avatar
      {
        position: absolute;
        left:-45px;
        top:5px;
        img
        {
          max-width: 32px;
          max-height: 32px;
          border-radius: 3px;
        }
    }
    }

    .delete // Delete icon for comment
    {
      position: absolute;
      right:-10px;
      top:5px;
      display: none;
      cursor: pointer;
      .pt-icon { // Ensure delete icon color
        color: var(--app-secondary-text-color);
      }
      &:hover .pt-icon {
        color: var(--app-link-color);
      }
    }
  }
}

.feedbox .paid // "Paid content" indicator
{
  position: absolute;
  right:0px;
  top:0px;
  .pt-icon {
    color: var(--app-secondary-text-color) !important; // Was LIGHT_GRAY3
  }
}

.feedbox:hover .paid
{
  display: none;
}

.feedbox .hovermenu // Hover menu (ellipsis) for feed item actions
{
  position: absolute;
  right:0px;
  top:0px;
  display: none;
  color: var(--app-secondary-text-color); // Was $gray5
  cursor: pointer;
}

.feedbox:hover .hovermenu
{
  display: block;
}

.feedfilter // Filter bar (e.g., on Home or GroupDetail)
{
  background-color: var(--app-card-bg-color); // Was white
  display: flex;
  flex-direction: row;
  padding-left:5px;
  padding-right:5px;
}

.feedfilter > *
{
  padding:10px;
}

.feedfilter > * .active a // Active link in filter bar
{
  border-bottom: 3px solid var(--app-link-color); // Was $blue3
  padding-bottom:8px;
  color: var(--app-link-color); // Was $blue3
}

.feedfilter > * :not(.active) a // Inactive link in filter bar
{
  color: var(--app-secondary-text-color); // Was $gray3
}

.feedfilter > * :not(.active) a:hover
{
  border-bottom: 3px solid var(--app-secondary-text-color); // Was $gray3
  padding-bottom:8px;
}


.lmlink .pt-icon
{
  margin-top:3px;
}

.in-line
{
  display: inline;
  clear:none; 
}

.gray5 // This class is used for specific text coloring, should be reviewed if it needs dark mode variant
{
  // color: $gray5; // Original, might be too dark for dark mode
  color: var(--app-secondary-text-color); // General secondary text color
}
.app-dark-mode .gray5 {
  color: $light-gray1; // A lighter gray for dark mode if $gray5 was specifically for a darker shade
}


.middle // Main content container
{
  max-width:1200px;
  margin-left:auto;
  margin-right:auto;
}



/////////////// login /////////

.loginhero // Login page background
{
  display: flex;
  flex-direction: column;
  align-items: center;
  flex:1;
  min-height: 100vh;
  background-color: $dark-gray2; // Original was $gray2, using a dark theme color now
  // For dark mode, this might already be dark enough. If not, specific override:
  // .app-dark-mode & { background-color: $dark-gray1; }

  .logobox
  {
    text-align: center;
    margin-top: 30px;

    .title
    {
      margin-left: 20px;
      margin-right: 20px;
      line-height: 30px;
    }
  }
}

.loginhero .title // Title text on login page
{
  color: $light-gray5; // Was white
  margin-bottom:20px;
  font-size: $lm-font3;
}

.fronttab // Login/Register form container
{
  background-color: var(--app-card-bg-color); // Was white
  padding:20PX;
  border-radius: 5px;
  min-width:500px;
  margin-top:20px;
  margin-bottom:50px;
  // Text color inside will be handled by Blueprint's .bp3-dark or general var(--app-text-color)
}

.loginhero .actionbar
{
  display: flex;
}

.loginhero .actionbar > *
{
  flex:1;
}

.loginhero .actionbar .right
{
  display: flex;
  flex-direction: row-reverse;
}

.require // "Required" text next to form labels
{
  color: var(--app-secondary-text-color); // Was $gray3
  font-size: $lm-font1;
  margin-left:5px;
}

.langicon // Language icon on login page
{
  color: var(--app-bg-color); // Was white, text should contrast with its new bg
  font-size: $lm-font1;
  background-color: var(--app-secondary-text-color); // Was $gray5
  border-radius: 3px;
  padding:5px;
  cursor: pointer;
}
.app-dark-mode .langicon {
  color: var(--app-text-color);
  background-color: $dark-gray1; // Darker background for the icon itself
}

.langicon:hover
{
  background-color: var(--app-link-hover-color); // Was $blue2
}

.left5
{
  margin-left:5px;
}

.blocklist >*:not(:first-child)
{
  margin-top:10px;
}

.px10list >*:not(:first-child)
{
  margin-top:10px;
}

.vcenter
{
  display: flex;
  align-items: center;
}


.front
{
  margin-left:10px;
  
  span // Not sure what this is, assuming it's a badge or highlight
  {
    background-color: var(--app-link-color); // Was $blue3
    color: white; // Ensure text on this bg is light
  }
}
.app-dark-mode .front span {
  color: $dark-gray1; // Dark text on lighter blue for dark mode
}


.groupnotice // Notice box for groups
{
  background-color: var(--app-card-bg-color); // Was white
  padding:20px;
  border-radius: 3px;
  text-align:center;
  font-size:$lm-font3;
  color: var(--app-text-color); // Was $gray3
}

%white-block // SCSS placeholder, needs to be updated if used
{
  background-color: var(--app-card-bg-color); // Was white
  color: var(--app-text-color);
}


.groupform // Form for group creation/editing
{
  @extend %white-block; // Will inherit dark mode changes from white-block
  padding:20px;
}

h1.lianmi // Specific h1 style
{
  font-size: $lm-font4;
  font-weight: normal; 
  line-height: $lm-font4;
  color: var(--app-link-color); // Was $blue3
}

.groupnotice > span // Span within group notice
{
  color: var(--app-secondary-text-color); // Was $light-gray3
}

.editbox // Container for avatar editor
{
  display: flex;
  flex-direction: row;
  align-items: flex-end;

  .theavatar
  {
    cursor: move;
  }

  .slider
  {
    margin-left: 10px;
  }
}

.pointer
{
  cursor: pointer;
}

.dropzone // Dropzone component style
{
  .covertext
  {
    color: var(--app-link-color); // Was $blue3
    cursor: pointer;
  }
}

.groupdetail // Group detail display
{
  img
  {
    border-radius: 5px;
    max-width:150px;
    max-height:150px;
  }

  .name
  {
    font-size: $lm-font3;
    color: var(--app-text-color); // Ensure text color
  }
}

.groupform 
{
  .guidebar > * 
  {
    margin-right: 10px;
  }

  .checking // "Checking" state display
  {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding:40px;
    color: var(--app-text-color); // Ensure text color

    > * 
    {
      margin-bottom:10px;
    }
  }
}
.pricepostfix // Text next to price input
{
  padding-right:10px;
  color: var(--app-secondary-text-color); // Was $gray3
  margin-top:3px;
  position: relative;
  top: 12px;
}


.groupcard // Card for displaying group info
{
  color: var(--app-text-color); // Set base text color for the card
  .groupheader
  {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    // background: url('/image/background.jpg'); // Background image might need adjustment for dark mode visibility
    // Consider adding a dark overlay for text readability if image is light:
    // position: relative;
    // &::before {
    //   content: ''; position: absolute; top: 0; left: 0; right: 0; bottom: 0;
    //   background-color: rgba(0,0,0,0.3); // Dark overlay
    //   .app-dark-mode & { background-color: rgba(0,0,0,0.5); } // Darker overlay for dark mode
    // }
    background-position: center left;
    background-size: 100%;
    height:180px;

    h1 // Title on group header
    {
      color: white; // Keep white if on dark background image, ensure readability
      font-size: $lm-font3;
      // text-shadow: 1px 1px 2px black; // Add shadow if needed for readability on image
    }
  }

  .cover // Group cover image
  {
    border-radius: 100%;
    max-width: 80px;
    max-height: 80px;
    border:2px solid rgba(var(--app-card-bg-color-rgb, 255, 255, 255), .8 ); // Border based on card bg
  }
  .app-dark-mode .groupcard .cover {
     border:2px solid rgba(var(--app-card-bg-color-rgb, 57, 65, 70), .8 ); // Darker border
  }

  .groupnav // Navigation/info bar within group card
  {
    background: var(--app-card-bg-color); // Was white
    padding:10px;
    display:flex;
    flex-direction: row;
    align-items: center;
    
    .infos
    {
      flex:1;
      display: flex;
      flex-direction: column;
      font-size:$lm-font2;
      color: var(--app-secondary-text-color); // Was $gray5

      align-items: center;
      justify-content: center;
      span // Count numbers
      {
        color: var(--app-text-color); // Was $gray3
        margin-left:5px;
        font-size: $lm-font3;
      }
    }

    .buy > *:not(:first-child)
    {
      margin-left:10px;
    }
  }
}

.groupdetailbox // Box for group details
{
  .notmember // "Not a member" message box
  {
    background: var(--app-card-bg-color); // Was white
    padding:20px;
    color: var(--app-text-color); // Ensure text color
    .join
    {
      margin-top:20px;
    }
  }
}

.groupactionbar // Action bar for group
{
  &:empty
  {
    display: none;
  }
  display: flex;
  background: var(--app-card-bg-color); // Was white
  padding:20px;
  color: var(--app-text-color); // Ensure text color

  .freenotice,.membernotice
  {
    width:100%;
    >*
    {
      display: flex;
      justify-content: center;
      align-items: center;
    }
    
    .detail // Detail text
    {
      font-size: $lm-font2;
      color: var(--app-secondary-text-color); // Was $gray3
    }

    .quit > span // "Quit group" link
    {
      color: var(--app-secondary-text-color); // Was $light-gray1
      cursor: pointer;
      
      &:hover
      {
        color: var(--app-text-color); // Was $gray5
      }
    }
  }
}

.grouplistbar // Bar for group list
{
  margin-top:10px;
  color: var(--app-secondary-text-color); // Was $gray3
  ul
  {
    padding:0px;
    >li
    {
      display: flex;
      line-height: 1;

      .radiobox
      {
        margin-left:10px;
      }

      .grouptitle
      {
        width:150px;
        text-overflow: ellipsis;
        color: var(--app-text-color); // Ensure title is readable
      }
    }
  }
}

.submitbar // Submit bar, likely for forms
{
  min-height: 100px;
  .submitbox
  {
    position: fixed;
    // background-color: var(--app-card-bg-color); // If it needs a background
    // border-top: 1px solid var(--app-border-color); // If it needs a top border
  }
}

.contributefilter // Filter for contributions
{
  display: flex;
  flex-direction: row;
  color: var(--app-text-color);
  
  .button
  {
    position: absolute;
    right:0px;
    top:-2px;
  }
}

.sticky // Sticky header/filter bar
{
  position: sticky;
  top:45px;
  background-color: var(--app-card-bg-color); // Was white
  z-index:$pt-z-index-overlay;
  box-shadow: 1px 1px 1px  1px rgba(0,0,0,0.1); // Shadow might need adjustment
}
.app-dark-mode .sticky {
  box-shadow: 1px 1px 2px 1px rgba(0,0,0,0.3); // Darker shadow for dark mode
}


.explain // Explanatory text
{
  color: var(--app-secondary-text-color); // Was $gray5
  font-size: $lm-font1;
}

*:focus // Global focus - Blueprint handles this well, but if overridden:
{
  outline: 0px; // Keep this, but ensure focus indicators are visible via box-shadow or other means
}
// .app-dark-mode *:focus { // Example: ensure dark mode focus is visible if default is not enough
//   box-shadow: 0 0 0 1px var(--app-link-color), 0 0 0 3px rgba(var(--app-link-color-rgb, 72, 162, 247), 0.3);
// }


.flexcol
{
  flex-direction: column;
}

.hcenter
{
  display: flex;
  justify-content: center;
}

.whitebox // Generic white box, now themeable
{
  background-color: var(--app-card-bg-color); // Was white
  padding:20px;
  color: var(--app-text-color);
}

.hiddenitem
{
  display: none!important;
}

.padding40
{
  padding:40px;
}

.editorinoverlay // Overlay for editor
{
  min-height: 100vh;
  display: flex;
  width:100%;
  justify-content: center;
  align-items: center;
  // background-color: rgba(0,0,0,0.5); // If overlay needs a backdrop
  // .app-dark-mode & { background-color: rgba(0,0,0,0.7); }

  .editor // The editor component itself
  {
    width: 600px;
    background-color: var(--app-card-bg-color); // Ensure editor bg matches theme
    padding: 20px; // Example padding
    border-radius: $pt-border-radius;
  }
}

.feeddetail // Detail page for a feed item
{
  margin-top:50px;
  color: var(--app-text-color);
}

.memberlist // List of members
{
  padding:0px;
  > li // Member list item
  {
    display: flex;
    align-items: center;
    background-color: var(--app-card-bg-color); // Was white
    padding:10px;
    color: var(--app-text-color);

    > *:not(:first-child)
    {
      margin-left: 5px;
    }
    &:not(:last-child)
    {
      border-bottom: 1px solid var(--app-border-color); // Was $light-gray5
    }

    &:hover
    {
      .actionbar
      {
        display: flex;
      }
      background-color: var(--app-feed-item-hover-bg); // Was rgba( 255, 255, 255, .96 )
    }

    .image
    {
      flex:1;
      max-width: 50px;
      .avatar
      {
        img
        {
          max-width: 48px;
          max-height: 48px;
          border-radius: 100%;
        }
      }
    }
    .info
    {
      flex:1;
      .title
      {
        font-size: $lm-font3;
        margin-bottom: 5px;
        color: var(--app-text-color);
      }

      .title.blacklist // Blacklisted user title
      {
        *
        {
          color: var(--app-secondary-text-color) !important; // Was $gray5
          text-decoration: line-through;
        }
      }
      .title.halfblacklist // Semi-blacklisted user title
      {
        *
        {
          color: var(--app-secondary-text-color) !important; // Was $gray5
        }
      }
    }
  }
  .actionbar // Action bar within member list item
  {
    flex:5;
    display: none;
    justify-content:flex-end;
    
    .actions
    {
      padding:0px;
      display: flex;
      flex-direction: row;
      > li // Action item
      {
        display: flex;
        padding:5px;
        color: var(--app-secondary-text-color); // Was $gray3
        cursor: pointer;

        &:hover
        {
          color: var(--app-link-color); // Was $blue3
        }
      }
    }
  }
}


.settingbox // Container for settings page content
{
  .formbox // Form box within settings
  {
    background-color: var(--app-card-bg-color); // Was white
    padding:20px;
    color: var(--app-text-color);
    // Blueprint form elements should mostly adapt via .bp3-dark
  }

  .buttonbar_inline
  {
    display: flex;
    flex-direction: row;
    > *
    {
      margin-right:5px;
    }
  }
}

.blacklistbuttonbox // Box for blacklist buttons
{
  background-color: var(--app-card-bg-color); // Was white
  padding:20px;
}


.grouplist // List of groups
{
  margin:0px;
  padding:10px;
  background-color: var(--app-card-bg-color); // Was white
  > li // Group list item
  {
    display: flex;
    padding:5px;
    color: var(--app-text-color);
    &:hover
    {
      background-color: var(--app-feed-item-hover-bg); // Was #fdfdfd
    }
    &:not(:last-child)
    {
      padding-bottom: 7px;
      border-bottom:1px solid var(--app-border-color); // Was $light-gray5
      margin-bottom: 5px;
    }
    > *:not(:first-child)
    {
      margin-left: 5px;
    }
    .cover
    {
      flex:1;
      max-width: 50px;;
      > img
      {
        max-width: 48px;
        max-height: 48px;
        border-radius: 3px;
      }  
    }

    .info
    {
      flex:8;
      display: flex;
      flex-direction: column;
      justify-content: center;
      margin-left: 10px;
      
      .title // Group title
      {
        font-size: $lm-font3;
        color: var(--app-text-color);
      }
      .count // Member/post count
      {
        color: var(--app-secondary-text-color); // Was $gray5
        margin-top: 5px;
      }
    }

    .action // Action icon for group list item
    {
      flex:1;
      max-width: 30px;
      display: flex;
      align-items: center;
      justify-content: center;
      .pt-icon
      {
        color: var(--app-secondary-text-color); // Was $gray5
      }
    }
  }
}

.white // Class for elements that should always be white (use with caution, prefer semantic classes)
{
  background-color: white; // This will override dark theme. If needed, define .app-dark-mode .white specifically.
}
// .app-dark-mode .white { background-color: var(--app-card-bg-color); } // If .white should also be themable


.createnotice // Notice for creation forms
{
  font-size: $lm-font2;
  color: var(--app-secondary-text-color); // Was $gray3
  display: flex;
  justify-content: space-between;
  align-items: center;
  .right
  {
    .wide
    {
      display: flex;
    }

    .narrow
    {
      display: none;
    }
  }
}


.backbutton // Back button style
{
  .pt-button
  {
    border: 1px solid var(--app-border-color); // Was #ccc
    // Blueprint buttons should adapt with bp3-dark, but if custom styling:
    // background-color: var(--app-card-bg-color);
    // color: var(--app-text-color);
  }
  .app-dark-mode .backbutton .pt-button {
     // specific dark overrides if needed for custom styled blueprint button
  }
}
.imbox // IM chat box
{
  position: fixed;
  bottom: 0px;
  right:10px;
  width:400px;
  height:550px;
  background-color: var(--app-card-bg-color); // Was white
  box-shadow:0 1px 2px rgba(0,0,0,.2); // Shadow might need adjustment
  border:1px solid var(--app-border-color); // Was $gray5
  display:flex;
  flex-direction:column;
  z-index:$pt-z-index-content;

  .app-dark-mode & {
    box-shadow:0 1px 3px rgba(0,0,0,.4);
  }

  .topbar // Top bar of IM box
  {
    flex:1;
    padding:10px;
    display: flex;
    flex-direction: row;
    align-items: center;
    color: var(--app-text-color); // Was $gray3
    min-height: 40px;
    cursor: move;
    border-bottom: 1px solid var(--app-border-color); // Add border for separation

    .title
    {
      display: flex;
      flex:1;
      align-items: center;
      
      .avatar
      {
        img
        {
          max-width: 20px;
          max-height: 20px;
          border-radius: 100%;
        }
      }
    }
    .icon // Close/minimize icon
    {
      flex:1;
      display: flex;
      justify-content: flex-end;
      max-width: 20px;
      .pt-icon {
        color: var(--app-text-color);
      }
    }
  }
  .chat // Chat message area
  {
    background-color: var(--app-bg-color); // Was $light-gray3, use main app bg or slightly different shade
    overflow-y: scroll;
    flex:30;
    height:410px;
    padding-top:10px;
    padding-bottom:10px;
    .morelink // "Load more messages" link
    {
      cursor: pointer;
      color: var(--app-link-color); // Was $gray3
      text-align: center;
    }
    .messageitem // Individual message item
    {
      clear:both;
      .line
      {
        .text // Message bubble
        {
          background-color: var(--app-card-bg-color); // Was white
          color: var(--app-text-color);
          padding:8px;
          line-height: 1.6;
          clear:both;
          max-width: 240px;
          word-break: break-all;
          border-radius: $pt-border-radius; // Add some radius
        }
      }

      .line.right // Outgoing message
      {
        text-align: right;
        .text
        {
          float:right;
          text-align: left;
          border-bottom-left-radius:5px; 
          border-top-left-radius:5px; 
          border:0px;
          color: white; // Keep white text on primary color bg
          background-color: var(--app-button-primary-bg); // Was $blue5
          a
          {
            color: white; // Links within outgoing message
            &:hover
            {
              text-decoration: underline;
            }
          }
        }
      }

      .line.left // Incoming message
      {
        text-align: left;
        .text
        {
          float:left;
          border-bottom-right-radius:5px; 
          border-top-right-radius:5px; 
          border:0px;
          // Uses default themed background and text color from above
        }
      }

      .explain // Timestamp or other info below message
      {
        margin-top: 10px;
        margin-left:2px;
        margin-right:2px;
        clear:both;
        color: var(--app-secondary-text-color);
      }
      margin-top:20px;
    }
  }
  .sendform // Message input area
  {
    flex: 1;
    max-height: 80px;
    border-top: 1px solid var(--app-border-color); // Add border for separation
    input // Text input field
    {
      width:100%;
      border:0px;
      height:40px;
      padding-left:10px;
      padding-right:10px;
      font-size: $lm-font1-5;
      background-color: var(--app-card-bg-color); // Match card bg
      color: var(--app-text-color);

      &::placeholder
      {
        color: var(--app-secondary-text-color); // Was $light-gray1
      }
    }
  }
}

.noticebox // Notification box
{
  padding:0px;
  margin: 0px;
  .noticelist // List of notifications
  {
    padding:10px;
    margin:0px;
    background-color: var(--app-card-bg-color); // Was white
    > li // Notification item
    {
      &.read
      {
        color: var(--app-secondary-text-color); // Was $gray5
      }
      &.unread
      {
        color: var(--app-link-color); // Was $blue3
        font-weight: bold; // Make unread more prominent
      }
      display: flex;
      &:hover
      {
        background-color: var(--app-feed-item-hover-bg); // Was #fdfdfd
      }
      &:not(:last-child)
      {
        padding-bottom: 7px;
        border-bottom:1px solid var(--app-border-color); // Was $light-gray5
        margin-bottom: 5px;
      }
      .item
      {
        flex:1;
        display: flex;
        flex-direction: row;
        padding:5px;
        
        > *:not(:first-child)
        {
          margin-left:5px;
        }
        .avatar 
        {
          float: 1;
          max-width: 50px;
          img
          {
            max-width: 48px;
            max-height: 48px;
            border-radius: 3px;
          }
        }
        .content
        {
          flex:10;
          display: flex;
          flex-direction: column;
          .text // Notification text
          {
            margin-top: 5px;
            font-size: $lm-font1-5;
            display: flex;
            align-items: center;
            word-break: break-all;
            color: var(--app-text-color); // Ensure text color
          }
        }
        .action // Action button in notification
        {
          flex:1;
          min-width:100px;
          max-width:100px;
          
          span.pt-button-text // Text within Blueprint button
          {
            color: var(--app-text-color); // Was $gray3, ensure it's readable
          }
          .app-dark-mode & .bp3-button.bp3-minimal { // Specific for minimal buttons in dark mode
             color: var(--app-link-color) !important;
             &:hover {
               background-color: rgba(var(--app-link-color-rgb,72, 162, 247), 0.15);
             }
          }
        }
      }
    }
  }
}

.overbox // Generic overlay box
{
    width:100%;
    height:100%;
    display: flex;
    align-items: center;
    justify-content: center;
    // background-color: rgba(0,0,0,0.4); // Example backdrop
    // .app-dark-mode & { background-color: rgba(0,0,0,0.6); }

    .centerbox // Centered content within overlay
    {
        max-width:400px;
        min-width:400px;
        min-height:100px;
        background-color: var(--app-card-bg-color); // Was white
        color: var(--app-text-color);
        border-radius: 5px;
        padding:20px;
    }
    .section-qr // QR code section
    {
      padding:20px;
      text-align: center;
      background-color: var(--app-card-bg-color); // Was white
      .explain // Explanation text for QR
      {
        padding:10px;
        font-size: $lm-font4;
        color: var(--app-link-color); // Was $blue3
        a
        {
          margin-bottom: 2px;
          border-bottom: 1px dashed var(--app-link-color); // Was $blue3
        }
      }
    }
}

.qrimg-box // Box for QR image
{
    img
    {
        max-width:200px;
        // background-color: white; // If QR code itself is transparent and needs white bg
        // padding: 10px; // If adding bg
        // border-radius: 3px; // If adding bg
    }
}
// .app-dark-mode .qrimg-box img { // If QR codes are transparent and need a light background
//   background-color: $light-gray5;
//   padding: 10px;
//   border-radius: 3px;
// }


.section-qr // QR section specific styles
{
    position: relative;
    .close-button // Close button for QR section
    {
        position: absolute;
        right:-30px;
        top:-30px;
        cursor: pointer;
        z-index:999;

        svg // Close icon SVG
        {
            fill: var(--app-text-color); // Was white
            color: var(--app-text-color); // Was white
        }
    }
}


.usermenuname // User menu name display
{
  max-width: 120px;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

@media (max-width: 600px)
{
  
  .usermenuname
  {
    max-width: 100px;
  }
  // .imbox
  // {
  //   width: calc(100vw - 20px );
  //   height: calc( 100vh - 40px );
  //   // width: 90%;
  //   // transform:translate(0,0);
  // }

  .fronttab
  {
    min-width: 100%;
    border-radius: 0px;
  }

  .contentbox
  {
    flex-direction: column;
  }

  // .main
  // {
  //   margin-top: 0px;
  // }

  

  .leftside
  {
    // &:empty
    // {
    //   display: none;
    // }

    .usercard
    {
      display: none;
    }
  }

  .feeddetail
  {
    margin-top: 0px;
  }

  .createnotice
  {
    .right
    {
      .wide
      {
        display: none;
      }

      .narrow
      {
        display: flex;
      }
    }
  }

  .clo3
  {
    .header-box
    {
      .header .middle
      {
        .logo
        {
          display: none;
        }

        .links
        {
          .in-line
          {
            .link-text
            {
              display: none;
            }

            .link-icon
            {
              display: flex;
              // padding-left:10px;
              // padding-right:10px;
              // margin-top: 10px;
              a.lmlink
              {
                margin:0px;
                svg
                {
                  margin-left:5px;
                }
              }
              margin-right:10px;
            }

            
          }
        }
      }
    }
  }
} 


// @media (max-width: 800px) 
// {
//   .leftside,.rightside
//   {
//     display: none;
//   }
// }

// @media (max-width: 1000px) 
// {
//   .rightside
//   {
//     display: none;
//   }
// }

.point
{
  cursor: pointer;
}

.p-5
{
  padding:.5rem;
}